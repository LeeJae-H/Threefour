name: CI/CD

on:
  push:
    branches: ['main', 'develop']
  pull_request:
    branches: ['main', 'develop']

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 의존성 캐싱
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make application-deploy.yaml
        if: contains(github.ref, 'main')
        run: |
          echo "${{ secrets.APPLICATION_DEPLOY }}" > ./src/main/resources/application-deploy.yaml
        shell: bash

#      - name: Make application-test.yaml
#        run: |
#          mkdir -p ./src/test/resources
#          echo "${{ secrets.APPLICATION_TEST }}" > ./src/test/resources/application-test.yaml
#        shell: bash

      - name: Grant execute permission for Gradle Wrapper
        run: |
          chmod +x ./gradlew

      - name: Build with Gradle Wrapper - No Test
        run: |
          ./gradlew clean build -x test

#      - name: Test with Gradle Wrapper
#        run: ./gradlew test

      - name: DockerHub Login
        if: contains(github.ref, 'main')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Image Build & Push
        if: contains(github.ref, 'main')
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/threefour .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/threefour

  deploy:
    needs: build
    if: contains(github.ref, 'main')
    runs-on: ubuntu-22.04
    steps:
      - name: Application Run
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker kill threefour
            sudo docker rm -f threefour
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/threefour
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/threefour
            sudo docker run -p 8080:8080 \
            --name threefour \
            -d ${{ secrets.DOCKERHUB_USERNAME }}/threefour
